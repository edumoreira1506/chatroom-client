{"version":3,"sources":["config/constants.js","models/User.js","config/routes/PrivateRoute.js","config/routes/PublicRoute.js","pages/Login/index.js","models/Message.js","pages/Chat/index.js","config/routes/index.js","index.js"],"names":["routes","logout","window","localStorage","clear","location","href","isAuthenticated","Boolean","getUsername","getItem","isSender","username","PrivateRoute","Component","component","rest","authenticated","render","props","to","pathname","state","from","PublicRoute","Login","useState","setUsername","className","onSubmit","e","preventDefault","setItem","login","type","placeholder","required","value","onChange","target","template","message","isValid","messageClassName","classname","Chat","setMessage","messages","setMessages","socket","setSocket","addMessage","newMessage","oldMessages","sendMessage","callback","onValidated","onError","validate","error","alert","emit","useEffect","socketIo","io","connect","on","map","index","key","onClick","Routes","path","exact","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d115dd28.chunk.js","sourcesContent":["export const socketUrl = 'https://chatroom-server-edumoreira1506.herokuapp.com/';\n\nexport const routes = {\n  CHAT: '/chat',\n  LOGIN: '/login'\n}\n","import io from 'socket.io-client';\nimport { socketUrl, routes } from '../config/constants';\n\nexport const login = username => {\n  window.localStorage.setItem('username', username);\n  window.location.href = routes.CHAT;\n}\n\nexport const logout = () => {\n  window.localStorage.clear();\n  window.location.href = routes.LOGIN;\n}\n\nexport const isAuthenticated = () => Boolean(getUsername());\n\nexport const getUsername = () => window.localStorage.getItem('username');\n\nexport const createSocket = () => {\n  const socket = io.connect(socketUrl);\n\n  return socket;\n}\n\nexport const isSender = username => getUsername() === username;\n","import React from 'react';\nimport { \n  Route,\n  Redirect\n} from 'react-router-dom';\nimport { isAuthenticated, getUsername } from '../../models/User';\nimport { routes } from '../constants';\n\nconst PrivateRoute = ({ component: Component, ...rest }) => {\n  const authenticated = isAuthenticated();\n  const username = getUsername();\n\n  return (\n    <Route \n      { ...rest } \n      render={props => (\n        authenticated ? (\n          <Component { ...props} username={username} />\n        ) : (\n          <Redirect to={{ pathname: routes.LOGIN, state: { from: props.location } }} /> \n        )\n      )} \n    />\n  )\n}\n\nexport default PrivateRoute\n","import React from 'react';\nimport { \n  Route,\n  Redirect\n} from 'react-router-dom';\nimport { isAuthenticated } from '../../models/User';\nimport { routes } from '../constants';\n\nconst PublicRoute = ({ component: Component, ...rest }) => {\n  const authenticated = isAuthenticated();\n\n  return (\n    <Route \n      { ...rest } \n      render={props => (\n        authenticated ? (\n          <Redirect to={{ pathname: routes.CHAT, state: { from: props.location } }} /> \n        ) : (\n          <Component { ...props} />\n        )\n      )} \n    />\n  )\n}\n\nexport default PublicRoute\n","import React, { useState } from 'react';\nimport { login } from '../../models/User';\n\nimport './index.scss';\n\nconst Login = () => {\n  const [ username, setUsername ] = useState('');\n\n  const handleLogin = e => {\n    e.preventDefault();\n\n    login(username);\n  }\n\n  return (\n    <section className=\"Login\">\n      <div className=\"Login__title\">\n        <h2 className=\"Login__title-text\">\n          MultroomChat - Login\n        </h2>\n      </div>\n      <div className=\"Login__form-area\">\n        <form className=\"Login__form\" onSubmit={handleLogin}>\n          <input\n            className=\"Login__input\"\n            type=\"text\"\n            placeholder=\"Nome aleatório ai caraio\"\n            required\n            value={username}\n            onChange={e => setUsername(e.target.value)}  \n          />\n          <input className=\"Login__input\" type=\"submit\" value=\"Submit\" required />\n        </form>\n      </div>\n    </section>\n  )\n};\n\nexport default Login;\n","export const validate = (message, callback) => {\n  if (!isValid(message)) return callback.onError('Tamanho da mensagem inválida!');\n\n  return callback.onValidated();\n}\n\nexport const template = (username, message) => ({\n  username, message\n});\n\nconst isValid = message => Boolean(message);\n","import React, { useState, useEffect } from 'react';\nimport { isSender, logout, createSocket } from '../../models/User';\nimport { validate, template } from '../../models/Message';\nimport classname from 'classnames';\n\nimport './index.scss';\n\nconst messageClassName = ({ username }) => classname(\n  'Chat__message',\n  {\n    'Chat__message--black': isSender(username),\n    'Chat__message--grey': !isSender(username)\n  }\n)\n\nconst Chat = ({ username }) => {\n  const [ message, setMessage ] = useState('');\n  const [ messages, setMessages ] = useState([]);\n  const [ socket, setSocket ] = useState(null);\n\n  const handleSendMessage = e => {\n    e.preventDefault();\n\n    setMessage('');\n    sendMessage(message);\n  }\n\n  const addMessage = newMessage => {\n    setMessages(oldMessages => [...oldMessages, newMessage]);\n  }\n\n  const sendMessage = message => {\n    validate(message, {\n      onError: error => alert(error),\n      onValidated: () => {\n        const newMessage = template(username, message);\n\n        socket.emit('message', newMessage);\n\n        addMessage(newMessage);\n      }\n    });\n  }\n\n  useEffect(() => {\n    const socketIo = createSocket();\n\n    socketIo.on('connect', () => {\n      setSocket(socketIo);\n\n      const message = template(username, `${username} acabou de entrar`);\n\n      socketIo.emit('message', message);\n      socketIo.on('message', addMessage);\n    });\n  }, [username]);\n\n  return (\n    <section className=\"Chat\">\n      <ul className=\"Chat__content\">\n        {\n          messages.map((message, index) =>\n            <li className={messageClassName(message)} key={index}>\n              <div className=\"Chat__username\">\n                { message.username }\n              </div>\n              <div className=\"Chat__message-text\">\n                { message.message }\n              </div>\n            </li>\n          )\n        }\n      </ul>\n      <div className=\"Chat__submit-area\">\n        <form className=\"Chat__form\" onSubmit={handleSendMessage}>\n          <input\n            type=\"text\"\n            className=\"Chat__input\"\n            value={message}\n            onChange={e => setMessage(e.target.value)}\n          />\n          <input\n            type=\"submit\"\n            className=\"Chat__submit-button\"\n          />\n        </form>\n      </div>\n      <button className=\"Chat__logout\" onClick={logout}>\n        Sair\n      </button>\n    </section>\n  )\n};\n\nexport default Chat;\n","import React from 'react'\nimport { HashRouter } from 'react-router-dom';\n\nimport PrivateRoute from './PrivateRoute';\nimport PublicRoute from './PublicRoute';\n\nimport Login from '../../pages/Login';\nimport Chat from '../../pages/Chat';\n\nconst Routes = () => (\n  <HashRouter>\n    <PublicRoute path=\"/\" exact component={Login} />\n    <PublicRoute path=\"/login\" exact component={Login} />\n\n    <PrivateRoute path=\"/chat\" exact component={Chat} />\n  </HashRouter>\n);\n\nexport default Routes\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './config/routes';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n"],"sourceRoot":""}